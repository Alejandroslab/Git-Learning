How to use Atom with Github (EASIEST WAY POSSIBLE)


1) First download Git for Windows, Mac or linux

In Windows Git will provide an useful BASH emulation Tool
in order to have the linux terminal on Windows just for Git
(any command as known in linux will be avaible. this is to avoid using
windows cmd)

Open Git BASH

You have to set your global user and email

open the command line and:

Set your username:
git config --global user.name "FIRST_NAME LAST_NAME"

Set your email address:
git config --global user.email "MY_NAME@example.com"

DONE!


2) install Atom editor (It's FOSS)

Then open the Editor

it will ask you to create a repository to init

it will also ask you (probably) to add a username and an email



------------------------------------------
NOW GO TO STEP 2. YOU SHOULD CHECK YOUR SSH IDENTITY AND SYNC IT WITH GITHUB



3) then press

ctrl+shift+p

type Github clone

Go to github and copy the HTTPS url for the repository you want to clone.

Paste the url
click on clone

Now is cloned!

In order to push your commits Atom will ask to connect with your credentials

and sync with github, asking for a code (token)

Once you have put the token you will be able to push your commits!

Done!

there is no need to specify any branch! it will automatically be added your branch when cloning


----
IN MAC:
REMEMBER: if git buttons does not work you have to install eventually xcode
 xcode-select --install after every upgrade of macos

 REMEMBER: the fastest way to make git work is using terminal therefore install
 'platformio-ide' package inside atom in order to have a terminal of quickly access
if git produces some sort of error (as xcrun not available) you have to install xcode
with the usual command :  xcode-select --install

-------------------
Some basics usage:

Keep open the Git panel on Atom on the right

On the left side keep the repositories open.

You can work in multiple repositories at the same time of course

To commit and push

let's first create a file (shortcut is the key 'A') (remember to not insert
slashes in the name of the file as these will create folders)

Type a name. In case you wish to rename press F2

Put some text for testing

(You can also save your text with ctrl+s)


Now on the Git panel (aka tab) select the repository that you are changing

You will see Unstaged Changes (the file will become also green colored)

click on 'Stage install'

the changes now will appear below in the box 'Staged Changes'

Now you have to insert the Commit message (any text you wish)

Click on Commit to Master!

Now on the right side of the bar there will appear the button
"Push" (instead of "Fetch")

Click on push to push the changes to the server and you are done!!

So wonderful ..
